{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-router.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/commons/breadcrumbs/breadcrumbs.component.ts","./src/app/commons/breadcrumbs/breadcrumbs.component.html","./src/app/panels/add-target-panel/add-target-panel.component.ts","./src/app/panels/add-target-panel/add-target-panel.component.html","./src/app/panels/application-panel/application-panel.component.ts","./src/app/panels/application-panel/application-panel.component.html","./src/app/panels/notification-channel-panel/notification-channel-panel.component.ts","./src/app/panels/notification-channel-panel/notification-channel-panel.component.html","./src/app/panels/notification-trigger-panel/notification-trigger-panel.component.ts","./src/app/panels/notification-trigger-panel/notification-trigger-panel.component.html","./src/app/setting-list/setting-list.component.ts","./src/app/setting-list/setting-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotificationChannelPanelComponent } from './panels/notification-channel-panel/notification-channel-panel.component';\nimport { NotificationTriggerPanelComponent } from './panels/notification-trigger-panel/notification-trigger-panel.component';\nimport { ApplicationPanelComponent } from './panels/application-panel/application-panel.component';\nimport { AddTargetPanelComponent } from './panels/add-target-panel/add-target-panel.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'channel',\n    component: NotificationChannelPanelComponent\n  },\n  {\n    path: 'trigger',\n    component: NotificationTriggerPanelComponent\n  },\n  {\n    path: 'application',\n    component: ApplicationPanelComponent\n  },\n  {\n    path: 'target',\n    component: AddTargetPanelComponent\n  },\n  {\n    path: '',\n    redirectTo: '/',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule,\n  ],\n})\nexport class AppRouterModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'notification-managment-spa';\n}\n","<div class=\"app-container\">\n  <opf-breadcrumbs></opf-breadcrumbs>\n  <div class=\"content\">\n    <opf-setting-list></opf-setting-list>\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BreadcrumbsComponent } from './commons/breadcrumbs/breadcrumbs.component';\nimport { AppRouterModule } from './app-router.module';\nimport { SettingListComponent } from './setting-list/setting-list.component';\nimport { ApplicationPanelComponent } from './panels/application-panel/application-panel.component';\nimport { NotificationChannelPanelComponent } from './panels/notification-channel-panel/notification-channel-panel.component';\nimport { NotificationTriggerPanelComponent } from './panels/notification-trigger-panel/notification-trigger-panel.component';\nimport { AddTargetPanelComponent } from './panels/add-target-panel/add-target-panel.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BreadcrumbsComponent,\n    SettingListComponent,\n    ApplicationPanelComponent,\n    NotificationChannelPanelComponent,\n    NotificationTriggerPanelComponent,\n    AddTargetPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AppRouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss']\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>breadcrumbs works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-add-target-panel',\n  templateUrl: './add-target-panel.component.html',\n  styleUrls: ['./add-target-panel.component.scss']\n})\nexport class AddTargetPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-target-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-application-panel',\n  templateUrl: './application-panel.component.html',\n  styleUrls: ['./application-panel.component.scss']\n})\nexport class ApplicationPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"application-panel\">\n    <form action=\"channel\">\n        <p>\n            Select Application<span class=\"red\">*</span>\n        </p>\n        <ul>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"outage\">\n                <label for=\"outage\"> Outage Management</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"tsCatalog\">\n                <label for=\"tsCatalog\"> TS Catalog</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"dsal\">\n                <label for=\"dsal\"> DSAL</label>\n            </li>\n        </ul>\n        <div class=\"submit\">\n            <button type=\"submit\" class=\"btn-primary\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-notification-channel-panel',\n  templateUrl: './notification-channel-panel.component.html',\n  styleUrls: ['./notification-channel-panel.component.scss']\n})\nexport class NotificationChannelPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"notification-channel-panel\">\n    <form action=\"trigger\">\n        <p>\n            Select Application<span class=\"red\">*</span>\n        </p>\n        <ul>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"email\">\n                <label for=\"email\"> Email</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"popup\">\n                <label for=\"popup\"> Popup Notification</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"banner\">\n                <label for=\"banner\"> Banner </label>\n            </li>\n        </ul>\n        <div class=\"submit\">\n            <button type=\"submit\" class=\"btn-primary\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-notification-trigger-panel',\n  templateUrl: './notification-trigger-panel.component.html',\n  styleUrls: ['./notification-trigger-panel.component.scss']\n})\nexport class NotificationTriggerPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>notification-trigger-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-setting-list',\n  templateUrl: './setting-list.component.html',\n  styleUrls: ['./setting-list.component.scss']\n})\nexport class SettingListComponent implements OnInit {\n  panelLinks = [\n    {\n      link: 'application',\n      title: 'Select Application',\n    },\n    {\n      link: 'channel',\n      title: 'Select Notification Channel',\n    },\n    {\n      link: 'trigger',\n      title: 'Select Notification Tigger Channel',\n    },\n    {\n      link: 'target',\n      title: 'Add Target News',\n    }\n  ];\n  selectedIndex = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  selectCurrentTab(i) {\n    this.selectedIndex = i;\n  }\n\n}\n","<div class=\"panel\">\n    <ul>\n        <li *ngFor=\"let panelLink of panelLinks;let i = index\" [ngClass]=\"{'active': selectedIndex === i}\" (click)=\"selectCurrentTab(i);\">\n            <a [routerLink]=\"panelLink.link\">{{ panelLink.title }}</a>\n        </li>\n    </ul>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}