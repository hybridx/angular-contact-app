{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-router.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/commons/breadcrumbs/breadcrumbs.component.ts","webpack:///src/app/commons/breadcrumbs/breadcrumbs.component.html","webpack:///src/app/panels/add-target-panel/add-target-panel.component.ts","webpack:///src/app/panels/add-target-panel/add-target-panel.component.html","webpack:///src/app/panels/application-panel/application-panel.component.ts","webpack:///src/app/panels/application-panel/application-panel.component.html","webpack:///src/app/panels/notification-channel-panel/notification-channel-panel.component.ts","webpack:///src/app/panels/notification-channel-panel/notification-channel-panel.component.html","webpack:///src/app/panels/notification-trigger-panel/notification-trigger-panel.component.ts","webpack:///src/app/panels/notification-trigger-panel/notification-trigger-panel.component.html","webpack:///src/app/setting-list/setting-list.component.ts","webpack:///src/app/setting-list/setting-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","redirectTo","pathMatch","AppRouterModule","forRoot","imports","routes","AppRoutingModule","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BreadcrumbsComponent","AddTargetPanelComponent","ApplicationPanelComponent","NotificationChannelPanelComponent","NotificationTriggerPanelComponent","SettingListComponent","panelLinks","link","selectedIndex","i","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotificationChannelPanelComponent } from './panels/notification-channel-panel/notification-channel-panel.component';\nimport { NotificationTriggerPanelComponent } from './panels/notification-trigger-panel/notification-trigger-panel.component';\nimport { ApplicationPanelComponent } from './panels/application-panel/application-panel.component';\nimport { AddTargetPanelComponent } from './panels/add-target-panel/add-target-panel.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'channel',\n    component: NotificationChannelPanelComponent\n  },\n  {\n    path: 'trigger',\n    component: NotificationTriggerPanelComponent\n  },\n  {\n    path: 'application',\n    component: ApplicationPanelComponent\n  },\n  {\n    path: 'target',\n    component: AddTargetPanelComponent\n  },\n  {\n    path: '',\n    redirectTo: '/',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule,\n  ],\n})\nexport class AppRouterModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'notification-managment-spa';\n}\n","<div class=\"app-container\">\n  <opf-breadcrumbs></opf-breadcrumbs>\n  <div class=\"content\">\n    <opf-setting-list></opf-setting-list>\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BreadcrumbsComponent } from './commons/breadcrumbs/breadcrumbs.component';\nimport { AppRouterModule } from './app-router.module';\nimport { SettingListComponent } from './setting-list/setting-list.component';\nimport { ApplicationPanelComponent } from './panels/application-panel/application-panel.component';\nimport { NotificationChannelPanelComponent } from './panels/notification-channel-panel/notification-channel-panel.component';\nimport { NotificationTriggerPanelComponent } from './panels/notification-trigger-panel/notification-trigger-panel.component';\nimport { AddTargetPanelComponent } from './panels/add-target-panel/add-target-panel.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BreadcrumbsComponent,\n    SettingListComponent,\n    ApplicationPanelComponent,\n    NotificationChannelPanelComponent,\n    NotificationTriggerPanelComponent,\n    AddTargetPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AppRouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss']\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>breadcrumbs works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-add-target-panel',\n  templateUrl: './add-target-panel.component.html',\n  styleUrls: ['./add-target-panel.component.scss']\n})\nexport class AddTargetPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-target-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-application-panel',\n  templateUrl: './application-panel.component.html',\n  styleUrls: ['./application-panel.component.scss']\n})\nexport class ApplicationPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"application-panel\">\n    <form action=\"channel\">\n        <p>\n            Select Application<span class=\"red\">*</span>\n        </p>\n        <ul>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"outage\">\n                <label for=\"outage\"> Outage Management</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"tsCatalog\">\n                <label for=\"tsCatalog\"> TS Catalog</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"dsal\">\n                <label for=\"dsal\"> DSAL</label>\n            </li>\n        </ul>\n        <div class=\"submit\">\n            <button type=\"submit\" class=\"btn-primary\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-notification-channel-panel',\n  templateUrl: './notification-channel-panel.component.html',\n  styleUrls: ['./notification-channel-panel.component.scss']\n})\nexport class NotificationChannelPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"notification-channel-panel\">\n    <form action=\"trigger\">\n        <p>\n            Select Application<span class=\"red\">*</span>\n        </p>\n        <ul>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"email\">\n                <label for=\"email\"> Email</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"popup\">\n                <label for=\"popup\"> Popup Notification</label>\n            </li>\n            <li>\n                <input type=\"checkbox\" name=\"application-name\" id=\"banner\">\n                <label for=\"banner\"> Banner </label>\n            </li>\n        </ul>\n        <div class=\"submit\">\n            <button type=\"submit\" class=\"btn-primary\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-notification-trigger-panel',\n  templateUrl: './notification-trigger-panel.component.html',\n  styleUrls: ['./notification-trigger-panel.component.scss']\n})\nexport class NotificationTriggerPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>notification-trigger-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opf-setting-list',\n  templateUrl: './setting-list.component.html',\n  styleUrls: ['./setting-list.component.scss']\n})\nexport class SettingListComponent implements OnInit {\n  panelLinks = [\n    {\n      link: 'application',\n      title: 'Select Application',\n    },\n    {\n      link: 'channel',\n      title: 'Select Notification Channel',\n    },\n    {\n      link: 'trigger',\n      title: 'Select Notification Tigger Channel',\n    },\n    {\n      link: 'target',\n      title: 'Add Target News',\n    }\n  ];\n  selectedIndex = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  selectCurrentTab(i) {\n    this.selectedIndex = i;\n  }\n\n}\n","<div class=\"panel\">\n    <ul>\n        <li *ngFor=\"let panelLink of panelLinks;let i = index\" [ngClass]=\"{'active': selectedIndex === i}\" (click)=\"selectCurrentTab(i);\">\n            <a [routerLink]=\"panelLink.link\">{{ panelLink.title }}</a>\n        </li>\n    </ul>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}